#!/usr/bin/env node
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}require("fs"),require("os");var path=require("path");require("vamtiger-get-path-data"),require("vamtiger-create-directory-recursive"),require("vamtiger-copy-file"),require("vamtiger-get-directory-content-recursive");var Args=_interopDefault(require("vamtiger-argv/build/main")),getHelp=_interopDefault(require("vamtiger-commandline-help"));const remove=require("trash");var CommandlineArg,AbbreviatedCommandlineArg;!function(e){e.file="file",e.folder="folder",e.exclude="exclude",e.excludePattern="excludePattern",e.help="help"}(CommandlineArg||(CommandlineArg={})),function(e){e.f="f",e.d="d",e.e="e",e.p="p",e.h="h"}(AbbreviatedCommandlineArg||(AbbreviatedCommandlineArg={}));const ShortCommandlineArgs={[CommandlineArg.file]:AbbreviatedCommandlineArg.f,[CommandlineArg.folder]:AbbreviatedCommandlineArg.d,[CommandlineArg.exclude]:AbbreviatedCommandlineArg.e,[CommandlineArg.excludePattern]:AbbreviatedCommandlineArg.p,[CommandlineArg.help]:AbbreviatedCommandlineArg.h},CommandlineDescription={[CommandlineArg.file]:"File to remove",[CommandlineArg.folder]:"Folder to remove",[CommandlineArg.exclude]:"File/Folder to exclude",[CommandlineArg.excludePattern]:"File/Folder pattern to exclude",[CommandlineArg.help]:"List help options"},remove$2=require(".").default,workingDirectory=process.cwd(),args=new Args,currentFiles=args.has(CommandlineArg.file)&&args.getAll(CommandlineArg.file)||args.has(ShortCommandlineArgs[CommandlineArg.file])&&args.getAll(ShortCommandlineArgs[CommandlineArg.file]),currrentFolder=args.has(CommandlineArg.folder)&&args.get(CommandlineArg.folder)||args.has(ShortCommandlineArgs[CommandlineArg.folder])&&args.get(ShortCommandlineArgs[CommandlineArg.folder]),currentExclude=args.has(CommandlineArg.exclude)&&args.getAll(CommandlineArg.exclude)||args.has(ShortCommandlineArgs[CommandlineArg.exclude])&&args.getAll(ShortCommandlineArgs[CommandlineArg.exclude]),currrentFolderPattern=args.has(CommandlineArg.excludePattern)&&args.get(CommandlineArg.excludePattern)||args.has(ShortCommandlineArgs[CommandlineArg.excludePattern])&&args.get(ShortCommandlineArgs[CommandlineArg.excludePattern]),help=(args.has(CommandlineArg.help)||args.has(ShortCommandlineArgs[CommandlineArg.help]))&&getHelp({args:Object.assign(CommandlineArg),short:ShortCommandlineArgs,description:CommandlineDescription}),removeParams=(currentFiles||currrentFolder)&&{files:currentFiles&&currentFiles.map(e=>path.resolve(workingDirectory,e)),folder:path.resolve(workingDirectory,currrentFolder),exclude:currentExclude,excludePattern:currrentFolderPattern};function handleError(e){console.trace(e),process.exit()}help?console.log(help):removeParams&&remove$2(removeParams).catch(handleError);
//# sourceMappingURL=bin.js.map
